{"version":3,"sources":["topBar.js","term.js","App.js","reportWebVitals.js","index.js"],"names":["terms","data","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","autoComplete","down","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","props","classes","React","useState","className","AppBar","Container","maxWidth","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","Autocomplete","options","getOptionLabel","option","term","root","onChange","onTagsChange","renderInput","params","InputBase","placeholder","autoFocus","input","ref","InputProps","inputProps","TermList","Fragment","map","t","index","dharmaTerm","List","dense","ListItem","onClick","onTermClick","ListItemText","primary","totalTermNum","length","paper","textAlign","topSummary","divider","margin","termList","order","marginTop","overflow","termDescription","box","maxHeight","descriptionBox","App","dataIndex","setDataIndex","CssBaseline","e","values","valueIndex","justify","component","style","Grid","container","item","xs","Divider","Box","sm","Paper","description","d","subDescription","secondary","source","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f95bc88d.chunk.js","sourcesContent":["import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport * as data from \"./data.json\";\nconst terms = data.terminology;\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  autoComplete: {\n    width: 300,\n    [theme.breakpoints.down(\"xs\")]: {\n      width: 200,\n    },\n  },\n  inputRoot: {\n    color: \"inherit\",\n    padding: \"0px\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"md\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              简易索引\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <Autocomplete\n                options={terms}\n                getOptionLabel={(option) => option.term}\n                // style={{ width: 200 }}\n                classes={{\n                  root: classes.autoComplete,\n                }}\n                onChange={props.onTagsChange}\n                renderInput={(params) => (\n                  <InputBase\n                    placeholder=\"Search…\"\n                    autoFocus\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput,\n                    }}\n                    ref={params.InputProps.ref}\n                    inputProps={params.inputProps}\n                  />\n                )}\n              />\n            </div>\n            <div className={classes.grow} />\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TopBar from \"./topBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport * as data from \"./data.json\";\n// import { jsonFormater } from \"./utils\";\nconst terms = data.terminology;\n\nfunction TermList(props) {\n  return (\n    <React.Fragment>\n      {terms.map((t, index) => {\n        const dharmaTerm = `${index + 1}.${t.term}`;\n        return (\n          <List dense>\n            <ListItem onClick={() => props.onTermClick(index)}>\n              <ListItemText primary={dharmaTerm} />\n            </ListItem>\n          </List>\n        );\n      })}\n    </React.Fragment>\n  );\n}\n\nexport default TermList;\n","import React, { useState } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TopBar from \"./topBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport * as data from \"./data.json\";\nimport TermList from \"./term\";\n// import { jsonFormater } from \"./utils\";\n\nconst totalTermNum = data.terminology.length + 1;\nconst terms = data.terminology;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n\n    // color: theme.palette.text.secondary,\n  },\n  topSummary: {\n    padding: \"0 0 15px\",\n    textAlign: \"left\",\n  },\n  divider: {\n    width: \"100%\",\n    margin: \"0 0 15px 0\",\n  },\n  termList: {\n    order: 1,\n    [theme.breakpoints.down(\"xs\")]: {\n      order: 2,\n      marginTop: \"40vh\",\n      height: \"calc(40vh - 70px)\",\n      overflow: \"auto\",\n    },\n  },\n  termDescription: {\n    order: 2,\n    [theme.breakpoints.down(\"xs\")]: {\n      order: 1,\n      height: \"calc(50vh - 70px)\",\n      overflow: \"auto\",\n      width: \"90%\",\n      position: \"fixed\",\n    },\n  },\n  box: {\n    maxHeight: \"calc(100vh - 120px)\",\n    overflow: \"auto\",\n    [theme.breakpoints.down(\"xs\")]: {\n      maxHeight: \"calc(100vh - 150px)\",\n    },\n  },\n  descriptionBox: {\n    position: \"absolute\",\n    marginRight: \"40px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginRight: \"0px\",\n      height: \"calc(50vh - 70px)\",\n    },\n  },\n}));\nfunction App() {\n  const classes = useStyles();\n\n  const [dataIndex, setDataIndex] = useState(1);\n  const termClick = (index) => {\n    setDataIndex(index);\n  };\n  const onTagsChange = (e, values) => {\n    const valueIndex = values.index;\n    setDataIndex(valueIndex - 1);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <TopBar onTagsChange={onTagsChange} />\n      <Container maxWidth=\"md\" justify=\"flex-start\">\n        <Typography\n          component=\"div\"\n          style={{\n            backgroundColor: \"none\",\n            margin: \"5px\",\n          }}\n        >\n          <Grid container justify=\"flex-start\" alignItems=\"stretch\">\n            <Grid item xs={12}>\n              <Typography\n                component=\"div\"\n                style={{ backgroundColor: \"none\", margin: \"15px 0 15px 0\" }}\n              >\n                总目录 1- {totalTermNum} 词条\n              </Typography>\n            </Grid>\n          </Grid>\n          <Divider className={classes.divider} />\n          <Box className={classes.box}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={4} className={classes.termList}>\n                <Paper className={classes.paper}>\n                  <TermList onTermClick={termClick} />\n                </Paper>\n              </Grid>\n\n              <Grid\n                item\n                spacing={1}\n                xs={12}\n                sm={8}\n                className={classes.termDescription}\n              >\n                <Box className={classes.descriptionBox}>\n                  {terms[dataIndex] &&\n                    terms[dataIndex].description.map((d, index) => {\n                      return (\n                        <List>\n                          <ListItem>\n                            {index === 0 && (\n                              <ListItemText\n                                primary={`${dataIndex + 1}.${\n                                  terms[dataIndex].term\n                                }`}\n                              />\n                            )}\n                          </ListItem>\n                          <ListItem>\n                            <ListItemText\n                              primary={d.subDescription}\n                              secondary={d.source}\n                            />\n                          </ListItem>\n                        </List>\n                      );\n                    })}\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}